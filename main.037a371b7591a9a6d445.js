(()=>{"use strict";var e={d:(t,n)=>{for(var r in n)e.o(n,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:n[r]})}};e.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),e.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),e.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var t;e.g.importScripts&&(t=e.g.location+"");var n=e.g.document;if(!t&&n&&(n.currentScript&&(t=n.currentScript.src),!t)){var r=n.getElementsByTagName("script");r.length&&(t=r[r.length-1].src)}if(!t)throw new Error("Automatic publicPath is not supported in this browser");t=t.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),e.p=t})();var t={};e.r(t),e.d(t,{a_:()=>i,Hm:()=>s,VV:()=>o,Lg:()=>r,TT:()=>n,To:()=>h,sQ:()=>c,zX:()=>f,KM:()=>l,O9:()=>_,z8:()=>u,OP:()=>p,vi:()=>m,BU:()=>y,rC:()=>d,Vu:()=>a}),e.p,e.p;var n={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_disabled",inputErrorClass:"popup__input_type_error",errorClass:"popup__error_visible"},r={templateSelector:"#template-element",cardSelector:".element",buttonLikeSelector:".element__like-button",buttonDeleteSelector:".element__delete-button",imageSelector:".element__image",titleSelector:".element__title",likeClass:"element__like-button_active"},o=document.querySelector(".elements-list"),i=document.querySelector(".profile__add-button"),u=document.querySelector(".popup-add-card"),c=u.querySelector(".popup__form_add-card"),a=document.querySelector(".popup__input_type_title"),l=document.querySelector(".popup__input_type_link"),s=document.querySelector(".profile__edit-button"),p=document.querySelector(".popup-edit-profile"),f=p.querySelector(".popup__form_edit-profile"),d=document.querySelector(".profile__name"),y=document.querySelector(".profile__description"),_=document.querySelector(".popup__input_type_name"),h=document.querySelector(".popup__input_type_description"),m=document.querySelector(".popup_image");function v(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var b=function(){function e(t,n){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._form=n,this._inputList=Array.from(this._form.querySelectorAll(this._config.inputSelector)),this._buttonElement=this._form.querySelector(this._config.submitButtonSelector)}var t,n;return t=e,(n=[{key:"_showError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.add(this._config.inputErrorClass),t.classList.add(this._config.errorClass),t.textContent=e.validationMessage}},{key:"_hideError",value:function(e){var t=this._form.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._config.inputErrorClass),t.classList.remove(this._config.errorClass),t.textContent=""}},{key:"_isValid",value:function(e){e.validity.valid?this._hideError(e):this._showError(e)}},{key:"_hasInvalidInput",value:function(){return this._inputList.some((function(e){return!e.validity.valid}))}},{key:"disabledButton",value:function(){this._buttonElement.setAttribute("disabled","true"),this._buttonElement.classList.add(this._config.inactiveButtonClass)}},{key:"enableButton",value:function(){this._buttonElement.removeAttribute("disabled","true"),this._buttonElement.classList.remove(this._config.inactiveButtonClass)}},{key:"toggleButtonState",value:function(){this._hasInvalidInput()?this.disabledButton():this.enableButton()}},{key:"_setEventListeners",value:function(){var e=this;this._inputList.forEach((function(t){t.addEventListener("input",(function(){e._isValid(t),e.toggleButtonState()}))}))}},{key:"enableValidation",value:function(){this._setEventListeners()}},{key:"resetValidation",value:function(){var e=this;this._inputList.forEach((function(t){return e._hideError(t)})),this.toggleButtonState()}}])&&v(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var S=function(){function e(t,n,r,o){var i=o.handlerClickImage;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._config=t,this._handlerClickImage=i,this._name=n,this._link=r}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){return document.querySelector(this._config.templateSelector).content.querySelector(this._config.cardSelector).cloneNode(!0)}},{key:"getCardElement",value:function(){return this._cardElement=this._getTemplate(),this._setEventListeners(),this._cardElement.querySelector(this._config.titleSelector).textContent=this._name,this._image=this._cardElement.querySelector(this._config.imageSelector),this._image.src=this._link,this._image.alt=this._name,this._cardElement}},{key:"_handleLikeCard",value:function(){this._cardElement.querySelector(this._config.buttonLikeSelector).classList.toggle(this._config.likeClass)}},{key:"_handleDeleteCard",value:function(){this._cardElement.remove(),this._cardElement=null}},{key:"_setEventListeners",value:function(){var e=this;this._cardElement.querySelector(this._config.buttonLikeSelector).addEventListener("click",(function(){e._handleLikeCard()})),this._cardElement.querySelector(this._config.buttonDeleteSelector).addEventListener("click",(function(){e._handleDeleteCard()})),this._cardElement.querySelector(this._config.imageSelector).addEventListener("click",(function(){e._handlerClickImage()}))}}])&&g(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function w(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var E=function(){function e(t,n){var r=t.items,o=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderedItems=r,this._renderer=o,this._container=n}var t,n;return t=e,(n=[{key:"renderItems",value:function(){var e=this;this._renderedItems.forEach((function(t){return e._renderer(t)}))}},{key:"addItem",value:function(e){this._container.prepend(e)}}])&&w(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function k(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var O=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._popup=t,this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"open",value:function(){this._popup.classList.add("popup_opened"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._popup.classList.remove("popup_opened"),document.removeEventListener("keydown",this._handleEscClose)}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"setEventListeners",value:function(){var e=this;this._popup.addEventListener("mousedown",(function(t){(t.target===t.currentTarget||t.target.classList.contains("popup__close-button"))&&e.close()}))}}])&&k(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}();function C(e){return C="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},C(e)}function j(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function L(){return L="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=P(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},L.apply(this,arguments)}function P(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=I(e)););return e}function q(e,t){return q=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},q(e,t)}function T(e,t){if(t&&("object"===C(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function I(e){return I=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},I(e)}var B=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&q(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=I(r);if(o){var n=I(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return T(this,e)});function u(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(t=i.call(this,e))._description=t._popup.querySelector(".popup__picture-title"),t._image=t._popup.querySelector(".popup__picture"),t}return t=u,(n=[{key:"open",value:function(e,t){this._image.src=t,this._image.alt=e,this._description.textContent=e,L(I(u.prototype),"open",this).call(this)}}])&&j(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(O);function R(e){return R="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},R(e)}function V(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function x(){return x="undefined"!=typeof Reflect&&Reflect.get?Reflect.get.bind():function(e,t,n){var r=F(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(arguments.length<3?e:n):o.value}},x.apply(this,arguments)}function F(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=U(e)););return e}function D(e,t){return D=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(e,t){return e.__proto__=t,e},D(e,t)}function A(e,t){if(t&&("object"===R(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function U(e){return U=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(e){return e.__proto__||Object.getPrototypeOf(e)},U(e)}var M=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),Object.defineProperty(e,"prototype",{writable:!1}),t&&D(e,t)}(u,e);var t,n,r,o,i=(r=u,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=U(r);if(o){var n=U(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return A(this,e)});function u(e,t){var n,r=t.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,u),(n=i.call(this,e))._handleFormSubmit=r,n._popupForm=n._popup.querySelector(".popup__form"),n._inputList=n._popupForm.querySelectorAll(".popup__input"),n}return t=u,(n=[{key:"_getInputValues",value:function(){var e=this;return this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;x(U(u.prototype),"setEventListeners",this).call(this),this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())}))}},{key:"close",value:function(){x(U(u.prototype),"close",this).call(this),this._popupForm.reset()}}])&&V(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),u}(O);function $(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var z=function(){function e(t){var n=t.username,r=t.description;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._username=n,this._description=r}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{username:this._username.textContent,description:this._description.textContent}}},{key:"setUserInfo",value:function(e){this._username.textContent=e.name,this._description.textContent=e.description}}])&&$(t.prototype,n),Object.defineProperty(t,"prototype",{writable:!1}),e}(),N=new b(n,f);N.enableValidation();var H=new b(n,c);H.enableValidation();var K=new B(m);function Q(e,t){return new S(r,e,t,{handlerClickImage:function(){K.open(e,t)}}).getCardElement()}K.setEventListeners();var X=new E({items:t.initialCards,renderer:function(e){X.addItem(Q(e.name,e.link))}},o);X.renderItems();var G=new M(u,{handleFormSubmit:function(){X.addItem(Q(a.value,l.value)),G.close(),H.resetValidation()}});G.setEventListeners(),i.addEventListener("click",(function(){G.open(),H.resetValidation()}));var J=new z({username:d,description:y}),W=new M(p,{handleFormSubmit:function(e){J.setUserInfo(e),W.close()}});W.setEventListeners(),s.addEventListener("click",(function(){var e,t,n,r=J.getUserInfo();t=(e={username:r.username,description:r.description}).username,n=e.description,_.value=t,h.value=n,W.open(),N.resetValidation()}))})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RixZQUFhekYsSUFZVDJHLEVBQW1CLElBQUkvQixFQUMzQi9FLEVBQWtCLENBQ2hCaUYsaUJBQWtCLFNBQUM4QixHQUNqQkYsRUFBU0csWUFBWUQsR0FDckJELEVBQWlCckMsT0FDbEIsSUFFTHFDLEVBQWlCUixvQkFFakJ2RyxFQUFrQnFDLGlCQUFpQixTQUFTLFdBQzFDLElBbEJGLEVBQ0V1RCxFQUNBQyxFQWdCTXFCLEVBQU9KLEVBQVNLLGNBakJ0QnZCLEdBREYsRUFtQnNCLENBQ2xCQSxTQUFVc0IsRUFBS3RCLFNBQ2ZDLFlBQWFxQixFQUFLckIsY0FwQnBCRCxTQUNBQyxFQUNDLEVBRERBLFlBRUF4RixFQUFVeEMsTUFBUStILEVBQ2xCdEYsRUFBaUJ6QyxNQUFRZ0ksRUFrQnpCa0IsRUFBaUJWLE9BQ2pCTCxFQUF5QmEsaUJBQzFCLEciLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly95YW5kZXgucHJha3Rpa3VtL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3lhbmRleC5wcmFrdGlrdW0vd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3lhbmRleC5wcmFrdGlrdW0vd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly95YW5kZXgucHJha3Rpa3VtL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8veWFuZGV4LnByYWt0aWt1bS93ZWJwYWNrL3J1bnRpbWUvbWFrZSBuYW1lc3BhY2Ugb2JqZWN0Iiwid2VicGFjazovL3lhbmRleC5wcmFrdGlrdW0vd2VicGFjay9ydW50aW1lL3B1YmxpY1BhdGgiLCJ3ZWJwYWNrOi8veWFuZGV4LnByYWt0aWt1bS8uL3NyYy91dGlscy9jb25zdGFudHMuanMiLCJ3ZWJwYWNrOi8veWFuZGV4LnByYWt0aWt1bS8uL3NyYy9jb21wb25lbnRzL0Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8veWFuZGV4LnByYWt0aWt1bS8uL3NyYy9jb21wb25lbnRzL0NhcmQuanMiLCJ3ZWJwYWNrOi8veWFuZGV4LnByYWt0aWt1bS8uL3NyYy9jb21wb25lbnRzL1NlY3Rpb24uanMiLCJ3ZWJwYWNrOi8veWFuZGV4LnByYWt0aWt1bS8uL3NyYy9jb21wb25lbnRzL1BvcHVwLmpzIiwid2VicGFjazovL3lhbmRleC5wcmFrdGlrdW0vLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhJbWFnZS5qcyIsIndlYnBhY2s6Ly95YW5kZXgucHJha3Rpa3VtLy4vc3JjL2NvbXBvbmVudHMvUG9wdXBXaXRoRm9ybS5qcyIsIndlYnBhY2s6Ly95YW5kZXgucHJha3Rpa3VtLy4vc3JjL2NvbXBvbmVudHMvVXNlckluZm8uanMiLCJ3ZWJwYWNrOi8veWFuZGV4LnByYWt0aWt1bS8uL3NyYy9wYWdlcy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBUaGUgcmVxdWlyZSBzY29wZVxudmFyIF9fd2VicGFja19yZXF1aXJlX18gPSB7fTtcblxuIiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwiLy8gZGVmaW5lIF9fZXNNb2R1bGUgb24gZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5yID0gKGV4cG9ydHMpID0+IHtcblx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG5cdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG5cdH1cblx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbn07IiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjXG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkgc2NyaXB0VXJsID0gc2NyaXB0c1tzY3JpcHRzLmxlbmd0aCAtIDFdLnNyY1xuXHR9XG59XG4vLyBXaGVuIHN1cHBvcnRpbmcgYnJvd3NlcnMgd2hlcmUgYW4gYXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCB5b3UgbXVzdCBzcGVjaWZ5IGFuIG91dHB1dC5wdWJsaWNQYXRoIG1hbnVhbGx5IHZpYSBjb25maWd1cmF0aW9uXG4vLyBvciBwYXNzIGFuIGVtcHR5IHN0cmluZyAoXCJcIikgYW5kIHNldCB0aGUgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gdmFyaWFibGUgZnJvbSB5b3VyIGNvZGUgdG8gdXNlIHlvdXIgb3duIGxvZ2ljLlxuaWYgKCFzY3JpcHRVcmwpIHRocm93IG5ldyBFcnJvcihcIkF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgaW4gdGhpcyBicm93c2VyXCIpO1xuc2NyaXB0VXJsID0gc2NyaXB0VXJsLnJlcGxhY2UoLyMuKiQvLCBcIlwiKS5yZXBsYWNlKC9cXD8uKiQvLCBcIlwiKS5yZXBsYWNlKC9cXC9bXlxcL10rJC8sIFwiL1wiKTtcbl9fd2VicGFja19yZXF1aXJlX18ucCA9IHNjcmlwdFVybDsiLCJleHBvcnQgY29uc3QgY29uZmlnRm9ybSA9IHtcbiAgZm9ybVNlbGVjdG9yOiAnLnBvcHVwX19mb3JtJyxcbiAgaW5wdXRTZWxlY3RvcjogJy5wb3B1cF9faW5wdXQnLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogJy5wb3B1cF9fc2F2ZS1idXR0b24nLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiAncG9wdXBfX3NhdmUtYnV0dG9uX2Rpc2FibGVkJyxcbiAgaW5wdXRFcnJvckNsYXNzOiAncG9wdXBfX2lucHV0X3R5cGVfZXJyb3InLFxuICBlcnJvckNsYXNzOiAncG9wdXBfX2Vycm9yX3Zpc2libGUnXG59O1xuXG5cbmV4cG9ydCBjb25zdCBjb25maWdDYXJkID0ge1xuICB0ZW1wbGF0ZVNlbGVjdG9yOiAnI3RlbXBsYXRlLWVsZW1lbnQnLFxuICBjYXJkU2VsZWN0b3I6ICcuZWxlbWVudCcsXG4gIGJ1dHRvbkxpa2VTZWxlY3RvcjogJy5lbGVtZW50X19saWtlLWJ1dHRvbicsXG4gIGJ1dHRvbkRlbGV0ZVNlbGVjdG9yOiAnLmVsZW1lbnRfX2RlbGV0ZS1idXR0b24nLFxuICBpbWFnZVNlbGVjdG9yOiAnLmVsZW1lbnRfX2ltYWdlJyxcbiAgdGl0bGVTZWxlY3RvcjogJy5lbGVtZW50X190aXRsZScsXG4gIGxpa2VDbGFzczogJ2VsZW1lbnRfX2xpa2UtYnV0dG9uX2FjdGl2ZSdcbn07XG5cbmV4cG9ydCBjb25zdCBjb25maWdBcGkgPSB7XG4gIHVybDogXCJodHRwczovL21lc3RvLm5vbW9yZXBhcnRpZXMuY28vdjEvY29ob3J0LTQ4XCIsXG4gIGhlYWRlcnM6IHtcbiAgICBcImNvbnRlbnQtdHlwZVwiOiBcImFwcGxpY2F0aW9uL2pzb25cIixcbiAgICBcImF1dGhvcml6YXRpb25cIjogXCJiNzUyNTg2MS1kZTlkLTRkMTgtYWFjYi0xZTQ1ZGQ1NTUyYjBcIixcbiAgfVxufVxuXG4vLyBleHBvcnQgY29uc3QgaW5pdGlhbENhcmRzID0gW3tcbi8vICAgbmFtZTogXCLQodCo0JAsINCT0YDQsNC90LQt0JrQsNC90YzQvtC9XCIsXG4vLyAgIGxpbms6IFwiaHR0cHM6Ly9zdW45LXdlc3QudXNlcmFwaS5jb20vc3VuOS00Ni9zL3YxL2lmMi9Ba3J0Y0N4MXBxWGFjdGNSNUthWTEyTnJ6ck1SRjRHT2UwWnlQUGZGYjliNlhveWREcE5CTVB5ZDdsS04tUnVJTFIySmJlc1Ricm1PNFF3WWpDU3lPUXJSLmpwZz9zaXplPTI1NjB4MTkyMCZxdWFsaXR5PTk1JnR5cGU9YWxidW1cIlxuLy8gfSxcbi8vIHtcbi8vICAgbmFtZTogXCLQqNGA0Lgt0JvQsNC90LrQsFwiLFxuLy8gICBsaW5rOiBcImh0dHBzOi8vc3VuOS13ZXN0LnVzZXJhcGkuY29tL3N1bjktNTQvcy92MS9pZjIvenJUMFJZUTBmUkJYSXE5b01GZEdsXzZCRFcwUEJrWThTTVFqMVh5b3RkMTZLSDE1cTE3cEJzaVZBVDhhYVJIT3ZpUTZ2TjJ4by13UVdfT0lmSEVuOHpkVC5qcGc/c2l6ZT0xMjgweDk2MCZxdWFsaXR5PTk1JnR5cGU9YWxidW1cIlxuLy8gfSxcbi8vIHtcbi8vICAgbmFtZTogXCLQk9GA0YPQt9C40Y9cIixcbi8vICAgbGluazogXCJodHRwczovL3N1bjktd2VzdC51c2VyYXBpLmNvbS9zdW45LTE1L3MvdjEvaWYyL1hPem5COUtMNkNsTGd5NWtiaFJyaElaWGlfNTloTGQ5eTBfdUdZN2NrSndNdy1Fb2NjRG01RFI1Q1RRWnVRUkR6b0VnOVRhaFZQcEVnU05Ybm9KbDdra0QuanBnP3NpemU9MTI4MHg5NjAmcXVhbGl0eT05NSZ0eXBlPWFsYnVtXCJcbi8vIH0sXG4vLyB7XG4vLyAgIG5hbWU6IFwi0JPQtdC70LXQvdC00LbQuNC6XCIsXG4vLyAgIGxpbms6IFwiaHR0cHM6Ly9zdW45LXdlc3QudXNlcmFwaS5jb20vc3VuOS00OS9zL3YxL2lmMi9DWkJIR19UOU5VS0xjY3NqNy1VYkZvQ3lMd2VIc2hBQ1dHbzFiaGEwMEJlZzhZNzA3c3FkZlhYel9oc0tac1JiMGotaGFVeWlOSy1VeVZyT2daSVoydElQLmpwZz9zaXplPTE2MjB4MjE2MCZxdWFsaXR5PTk1JnR5cGU9YWxidW1cIlxuLy8gfSxcbi8vIHtcbi8vICAgbmFtZTogXCLQpNC40L3Qu9GP0L3QtNC40Y9cIixcbi8vICAgbGluazogXCJodHRwczovL3N1bjktd2VzdC51c2VyYXBpLmNvbS9zdW45LTM5L3MvdjEvaWYyLzk4UGYzbS1wTG15a0g5dVlfTzFUdVY0SVdKLTNzMklJaFBRaVk0MnRRb3RCaXlDUnJDWjhBTDM1YmxWSFRzVWZNa2lMbVE0OFkyY0dfQmZmMU9PaDlFSWguanBnP3NpemU9MjU2MHgxNDQwJnF1YWxpdHk9OTUmdHlwZT1hbGJ1bVwiXG4vLyB9LFxuLy8ge1xuLy8gICBuYW1lOiBcItCa0YDRi9C8XCIsXG4vLyAgIGxpbms6IFwiaHR0cHM6Ly9zdW45LWVhc3QudXNlcmFwaS5jb20vc3VuOS0zNS9zL3YxL2lmMi9IdUNDTG4zYTZ2SXFWMDM1THlNRDBCN1hYWEMwRDA5MXNGLUZvVVlrNzhSLVNQdVRfem1lWWxvMVJYaUozR1JPQUxQOTJaN1dFdFU4YkFMaW9KOVN3QV9XLmpwZz9zaXplPTk1OXgxMjgwJnF1YWxpdHk9OTUmdHlwZT1hbGJ1bVwiXG4vLyB9XG4vLyBdO1xuXG5leHBvcnQgY29uc3QgY2FyZHNDb250YWluZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRzLWxpc3RcIik7XG5leHBvcnQgY29uc3QgYnV0dG9uQWRkQ2FyZEl0ZW0gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucHJvZmlsZV9fYWRkLWJ1dHRvbicpO1xuZXhwb3J0IGNvbnN0IHBvcHVwQWRkQ2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cC1hZGQtY2FyZCcpO1xuZXhwb3J0IGNvbnN0IGZvcm1BZGRDYXJkID0gcG9wdXBBZGRDYXJkLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybV9hZGQtY2FyZCcpO1xuZXhwb3J0IGNvbnN0IHRpdGxlSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X3R5cGVfdGl0bGUnKTtcbmV4cG9ydCBjb25zdCBsaW5rSW5wdXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX2lucHV0X3R5cGVfbGluaycpO1xuZXhwb3J0IGNvbnN0IGJ1dHRvbkVkaXRQcm9maWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2VkaXQtYnV0dG9uJyk7XG5leHBvcnQgY29uc3QgcG9wdXBFZGl0UHJvZmlsZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cC1lZGl0LXByb2ZpbGUnKTtcbmV4cG9ydCBjb25zdCBmb3JtRWRpdFByb2ZpbGUgPSBwb3B1cEVkaXRQcm9maWxlLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fZm9ybV9lZGl0LXByb2ZpbGUnKTtcbmV4cG9ydCBjb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wcm9maWxlX19uYW1lJyk7XG5leHBvcnQgY29uc3QgcHJvZmlsZURlc2NyaXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnByb2ZpbGVfX2Rlc2NyaXB0aW9uJyk7XG5leHBvcnQgY29uc3QgbmFtZUlucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbnB1dF90eXBlX25hbWUnKTtcbmV4cG9ydCBjb25zdCBkZXNjcmlwdGlvbklucHV0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnBvcHVwX19pbnB1dF90eXBlX2Rlc2NyaXB0aW9uJyk7XG5leHBvcnQgY29uc3QgcG9wdXBJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9pbWFnZScpO1xuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XG4gIGNvbnN0cnVjdG9yKGNvbmZpZywgZm9ybSkge1xuICAgIHRoaXMuX2NvbmZpZyA9IGNvbmZpZztcbiAgICB0aGlzLl9mb3JtID0gZm9ybTtcbiAgICB0aGlzLl9pbnB1dExpc3QgPSBBcnJheS5mcm9tKHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvckFsbCh0aGlzLl9jb25maWcuaW5wdXRTZWxlY3RvcikpO1xuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IodGhpcy5fY29uZmlnLnN1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcbiAgfVxuXG4gIC8vINCk0YPQvdC60YbQuNGPLCDQutC+0YLQvtGA0LDRjyDQtNC+0LHQsNCy0LvRj9C10YIg0LrQu9Cw0YHRgSDRgSDQvtGI0LjQsdC60L7QuVxuICBfc2hvd0Vycm9yKGlucHV0RWxlbWVudCkge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuX2Zvcm0ucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbGVtZW50LmlkfS1lcnJvcmApOyAvLyDQndCw0YXQvtC00LjQvCDRjdC70LXQvNC10L3RgiDQvtGI0LjQsdC60LhcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9jb25maWcuaW5wdXRFcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LmFkZCh0aGlzLl9jb25maWcuZXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gaW5wdXRFbGVtZW50LnZhbGlkYXRpb25NZXNzYWdlOyAvLyDQodC+0L7QsdGJ0LXQvdC40LUg0YEg0L7RiNC40LHQutC+0Lkg0L3QsCDQv9C10YDQtdC00LDQvdC90YvQuSDQv9Cw0YDQsNC80LXRgtGAXG4gIH07XG5cbiAgLy8g0KTRg9C90LrRhtC40Y8sINC60L7RgtC+0YDQsNGPINGD0LTQsNC70Y/QtdGCINC60LvQsNGB0YEg0YEg0L7RiNC40LHQutC+0LlcbiAgX2hpZGVFcnJvcihpbnB1dEVsZW1lbnQpIHtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLl9mb3JtLnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWxlbWVudC5pZH0tZXJyb3JgKTtcbiAgICBpbnB1dEVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9jb25maWcuaW5wdXRFcnJvckNsYXNzKTtcbiAgICBlcnJvckVsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSh0aGlzLl9jb25maWcuZXJyb3JDbGFzcyk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gJyc7IC8vINCe0YfQuNGB0YLQuNC8INC+0YjQuNCx0LrRg1xuICB9O1xuXG4gIC8vINCk0YPQvdC60YbQuNGPLCDQutC+0YLQvtGA0LDRjyDQv9GA0L7QstC10YDRj9C10YIg0LLQsNC70LjQtNC90L7RgdGC0Ywg0L/QvtC70Y9cbiAgX2lzVmFsaWQoaW5wdXRFbGVtZW50KSB7XG4gICAgaWYgKCFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQpIHtcbiAgICAgIC8vINCV0YHQu9C4INC/0L7Qu9C1INC90LUg0L/RgNC+0YXQvtC00LjRgiDQstCw0LvQuNC00LDRhtC40Y4sINC/0L7QutCw0LbQtdC8INC+0YjQuNCx0LrRg1xuICAgICAgdGhpcy5fc2hvd0Vycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vINCV0YHQu9C4INC/0YDQvtGF0L7QtNC40YIsINGB0LrRgNC+0LXQvFxuICAgICAgdGhpcy5faGlkZUVycm9yKGlucHV0RWxlbWVudCk7XG4gICAgfVxuICB9O1xuXG5cbiAgLy8g0KTRg9C90LrRhtC40Y8gaGFzSW52YWxpZElucHV0INC+0LHRhdC+0LTQuNGCINC80LDRgdGB0LjQsiDQv9C+0LvQtdC5INC4INC+0YLQstC10YfQsNC10YIg0L3QsCDQstC+0L/RgNC+0YE6IMKr0JXRgdGC0Ywg0LvQuCDQt9C00LXRgdGMINGF0L7RgtGPINCx0Ysg0L7QtNC90L4g0L/QvtC70LUsINC60L7RgtC+0YDQvtC1INC90LUg0L/RgNC+0YjQu9C+INCy0LDQu9C40LTQsNGG0LjRjj/Cuy5cbiAgLy8g0KTRg9C90LrRhtC40Y8g0L/RgNC40L3QuNC80LDQtdGCINC80LDRgdGB0LjQsiDQv9C+0LvQtdC5XG4gIF9oYXNJbnZhbGlkSW5wdXQoKSB7XG4gICAgLy8g0L/RgNC+0YXQvtC00LjQvCDQv9C+INGN0YLQvtC80YMg0LzQsNGB0YHQuNCy0YMg0LzQtdGC0L7QtNC+0Lwgc29tZVxuICAgIHJldHVybiB0aGlzLl9pbnB1dExpc3Quc29tZSgoaW5wdXRFbGVtZW50KSA9PiB7XG4gICAgICAvLyDQldGB0LvQuCDQv9C+0LvQtSDQvdC1INCy0LDQu9C40LTQvdC+LCDQutC+0LvQsdGN0Log0LLQtdGA0L3RkdGCIHRydWVcbiAgICAgIC8vINCe0LHRhdC+0LQg0LzQsNGB0YHQuNCy0LAg0L/RgNC10LrRgNCw0YLQuNGC0YHRjyDQuCDQstGB0Y8g0YTRg9C90LrRhtC40Y9cbiAgICAgIC8vIGhhc0ludmFsaWRJbnB1dCDQstC10YDQvdGR0YIgdHJ1ZVxuICAgICAgcmV0dXJuICFpbnB1dEVsZW1lbnQudmFsaWRpdHkudmFsaWQ7XG4gICAgfSk7XG4gIH07XG5cbiAgZGlzYWJsZWRCdXR0b24oKSB7XG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2Rpc2FibGVkJywgJ3RydWUnKTtcbiAgICB0aGlzLl9idXR0b25FbGVtZW50LmNsYXNzTGlzdC5hZGQodGhpcy5fY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICB9XG5cbiAgZW5hYmxlQnV0dG9uKCkge1xuICAgIHRoaXMuX2J1dHRvbkVsZW1lbnQucmVtb3ZlQXR0cmlidXRlKCdkaXNhYmxlZCcsICd0cnVlJyk7XG4gICAgdGhpcy5fYnV0dG9uRWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKHRoaXMuX2NvbmZpZy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgfVxuXG5cbiAgLy8g0KTRg9C90LrRhtC40Y8g0L/RgNC40L3QuNC80LDQtdGCINC80LDRgdGB0LjQsiDQv9C+0LvQtdC5INCy0LLQvtC00LBcbiAgLy8g0Lgg0Y3Qu9C10LzQtdC90YIg0LrQvdC+0L/QutC4LCDRgdC+0YHRgtC+0Y/QvdC40LUg0LrQvtGC0L7RgNC+0Lkg0L3Rg9C20L3QviDQvNC10L3Rj9GC0YxcbiAgdG9nZ2xlQnV0dG9uU3RhdGUoKSB7XG4gICAgLy8g0JXRgdC70Lgg0LXRgdGC0Ywg0YXQvtGC0Y8g0LHRiyDQvtC00LjQvSDQvdC10LLQsNC70LjQtNC90YvQuSDQuNC90L/Rg9GCXG4gICAgaWYgKHRoaXMuX2hhc0ludmFsaWRJbnB1dCgpKSB7XG4gICAgICAvLyDRgdC00LXQu9Cw0Lkg0LrQvdC+0L/QutGDINC90LXQsNC60YLQuNCy0L3QvtC5XG4gICAgICB0aGlzLmRpc2FibGVkQnV0dG9uKCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vINC40L3QsNGH0LUg0YHQtNC10LvQsNC5INC60L3QvtC/0LrRgyDQsNC60YLQuNCy0L3QvtC5XG4gICAgICB0aGlzLmVuYWJsZUJ1dHRvbigpO1xuICAgIH1cbiAgfTtcblxuICAvLyDQktGL0LfQvtCy0LXQvCDRhNGD0L3QutGG0LjRjiBpc1ZhbGlkINC90LAg0LrQsNC20LTRi9C5INCy0LLQvtC0INGB0LjQvNCy0L7Qu9CwXG4gIC8vZm9ybUlucHV0LmFkZEV2ZW50TGlzdGVuZXIoJ2lucHV0JywgaXNWYWxpZCk7XG4gIC8v0LLQt9Cw0LzQtdC9INC10Lkg0L3QsNC/0LjRiNC10Lwg0YHQu9GD0YjQsNGC0LXQu9GMINC90LAg0LrQsNC20LTQvtC1INC/0L7Qu9C1INCy0LLQvtC00LBcblxuICBfc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgLy8g0JLRi9C30L7QstC40YLQtSDRhNGD0L3QutGG0LjRjiB0b2dnbGVCdXR0b25TdGF0ZSDQv9C+0YHQu9C1INC+0L/RgNC10LTQtdC70LXQvdC40Y8g0LrQvtC90YHRgtCw0L3RgtGLIGJ1dHRvbkVsZW1lbnQuINCt0YLQviDQv9GA0L7QstC10YDQuNGCINGB0L7RgdGC0L7Rj9C90LjQtSDQutC90L7Qv9C60Lgg0L/RgNC4INC/0LXRgNCy0L7QuSDQt9Cw0LPRgNGD0LfQutC1INGB0YLRgNCw0L3QuNGG0YsuINCi0L7Qs9C00LAg0LrQvdC+0L/QutCwINC/0LXRgNC10YHRgtCw0L3QtdGCINCx0YvRgtGMINCw0LrRgtC40LLQvdC+0Lkg0LTQviDQstCy0L7QtNCwINC00LDQvdC90YvRhSDQsiDQvtC00L3QviDQuNC3INC/0L7Qu9C10LkuXG4gICAgLy8gdGhpcy50b2dnbGVCdXR0b25TdGF0ZSgpO1xuXG4gICAgLy8g0J7QsdC+0LnQtNGR0Lwg0LLRgdC1INGN0LvQtdC80LXQvdGC0Ysg0L/QvtC70YPRh9C10L3QvdC+0Lkg0LrQvtC70LvQtdC60YbQuNC4XG4gICAgdGhpcy5faW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWxlbWVudCkgPT4ge1xuICAgICAgLy8g0LrQsNC20LTQvtC80YMg0L/QvtC70Y4g0LTQvtCx0LDQstC40Lwg0L7QsdGA0LDQsdC+0YLRh9C40Log0YHQvtCx0YvRgtC40Y8gaW5wdXRcbiAgICAgIGlucHV0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdpbnB1dCcsICgpID0+IHtcbiAgICAgICAgdGhpcy5faXNWYWxpZChpbnB1dEVsZW1lbnQpO1xuICAgICAgICAvLyDQktGL0LfQvtCy0LjRgtC1INGE0YPQvdC60YbQuNGOIHRvZ2dsZUJ1dHRvblN0YXRlINCyINGC0LXQu9C1INC+0LHRgNCw0LHQvtGC0YfQuNC60LAg0YHQvtCx0YvRgtC40Y8gaW5wdXQuINCf0LXRgNC10LTQsNC50YLQtSDQtdC5INC80LDRgdGB0LjQsiDQv9C+0LvQtdC5INGE0L7RgNC80Ysg0Lgg0Y3Qu9C10LzQtdC90YIg0LrQvdC+0L/QutC4LiDQotCw0LrQvtC5INCy0YvQt9C+0LIg0L/RgNC+0LLQtdGA0LjRgiDRgdC+0YHRgtC+0Y/QvdC40LUg0LrQvdC+0L/QutC4INC/0YDQuCDQutCw0LbQtNC+0Lwg0LjQt9C80LXQvdC10L3QuNC4INGB0LjQvNCy0L7Qu9CwINCyINC70Y7QsdC+0Lwg0LjQtyDQv9C+0LvQtdC5LlxuICAgICAgICB0aGlzLnRvZ2dsZUJ1dHRvblN0YXRlKCk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfTtcblxuICBlbmFibGVWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gIH07XG5cbiAgcmVzZXRWYWxpZGF0aW9uKCkge1xuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKGlucHV0RWxlbWVudCA9PiB0aGlzLl9oaWRlRXJyb3IoaW5wdXRFbGVtZW50KSk7XG4gICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSgpO1xuICB9XG5cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBDYXJkIHtcbiAgY29uc3RydWN0b3IoY29uZmlnLCBuYW1lLCBsaW5rLCB7IGhhbmRsZXJDbGlja0ltYWdlIH0pIHtcbiAgICB0aGlzLl9jb25maWcgPSBjb25maWc7XG4gICAgdGhpcy5faGFuZGxlckNsaWNrSW1hZ2UgPSBoYW5kbGVyQ2xpY2tJbWFnZTtcbiAgICB0aGlzLl9uYW1lID0gbmFtZTtcbiAgICB0aGlzLl9saW5rID0gbGluaztcbiAgfVxuXG4gIF9nZXRUZW1wbGF0ZSgpIHtcbiAgICByZXR1cm4gZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NvbmZpZy50ZW1wbGF0ZVNlbGVjdG9yKVxuICAgICAgLmNvbnRlbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKHRoaXMuX2NvbmZpZy5jYXJkU2VsZWN0b3IpXG4gICAgICAuY2xvbmVOb2RlKHRydWUpO1xuICB9XG5cbiAgZ2V0Q2FyZEVsZW1lbnQoKSB7XG4gICAgdGhpcy5fY2FyZEVsZW1lbnQgPSB0aGlzLl9nZXRUZW1wbGF0ZSgpO1xuICAgIHRoaXMuX3NldEV2ZW50TGlzdGVuZXJzKCk7XG4gICAgdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9jb25maWcudGl0bGVTZWxlY3RvcikudGV4dENvbnRlbnQgPSB0aGlzLl9uYW1lO1xuICAgIHRoaXMuX2ltYWdlID0gdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9jb25maWcuaW1hZ2VTZWxlY3Rvcik7XG4gICAgdGhpcy5faW1hZ2Uuc3JjID0gdGhpcy5fbGluaztcbiAgICB0aGlzLl9pbWFnZS5hbHQgPSB0aGlzLl9uYW1lO1xuICAgIHJldHVybiB0aGlzLl9jYXJkRWxlbWVudDtcbiAgfVxuXG4gIC8vINC80LXRgtC+0LQg0YHQu9GD0YjQsNGC0LXQu9GPINC70LDQudC60LBcbiAgX2hhbmRsZUxpa2VDYXJkKCkge1xuICAgIHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fY29uZmlnLmJ1dHRvbkxpa2VTZWxlY3RvcikuY2xhc3NMaXN0LnRvZ2dsZSh0aGlzLl9jb25maWcubGlrZUNsYXNzKTtcbiAgfVxuXG4gIC8vINC80LXRgtC+0LQg0YHQu9GD0YjQsNGC0LXQu9GPINC60L3QvtC/0LrQuCDRg9C00LDQu9C40YLRjFxuICBfaGFuZGxlRGVsZXRlQ2FyZCgpIHtcbiAgICB0aGlzLl9jYXJkRWxlbWVudC5yZW1vdmUoKTtcbiAgICB0aGlzLl9jYXJkRWxlbWVudCA9IG51bGw7XG4gIH1cblxuICBcblxuICAvL2PQu9GD0YjQsNGC0LXQu9C4XG4gIF9zZXRFdmVudExpc3RlbmVycygpIHtcbiAgICAvLyDQutC90L7Qv9C60LggbGlrZVxuICAgIHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fY29uZmlnLmJ1dHRvbkxpa2VTZWxlY3RvcikuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVMaWtlQ2FyZCgpO1xuICAgIH0pO1xuXG4gICAgLy8g0LrQvdC+0L/QutC4IGRlbGV0ZVxuICAgIHRoaXMuX2NhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fY29uZmlnLmJ1dHRvbkRlbGV0ZVNlbGVjdG9yKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIHRoaXMuX2hhbmRsZURlbGV0ZUNhcmQoKTtcbiAgICB9KTtcblxuICAgIC8vINC/0L7Qv9Cw0L/RiyDRgSDQv9C+0LvQvdC+0YDQsNC30LzQtdGA0L3Ri9C80Lgg0YTQvtGC0L7Qs9GA0LDRhNC40Y/QvNC4XG4gICAgdGhpcy5fY2FyZEVsZW1lbnQucXVlcnlTZWxlY3Rvcih0aGlzLl9jb25maWcuaW1hZ2VTZWxlY3RvcikuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICB0aGlzLl9oYW5kbGVyQ2xpY2tJbWFnZSgpXG4gICAgfSk7XG4gIH1cblxuXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XG4gIGNvbnN0cnVjdG9yKHsgaXRlbXMsIHJlbmRlcmVyIH0sIGNvbnRhaW5lcikge1xuICAgIHRoaXMuX3JlbmRlcmVkSXRlbXMgPSBpdGVtcztcbiAgICB0aGlzLl9yZW5kZXJlciA9IHJlbmRlcmVyO1xuICAgIHRoaXMuX2NvbnRhaW5lciA9IGNvbnRhaW5lcjtcbiAgfVxuXG4gIHJlbmRlckl0ZW1zKCkge1xuICAgIHRoaXMuX3JlbmRlcmVkSXRlbXMuZm9yRWFjaChpdGVtID0+IHRoaXMuX3JlbmRlcmVyKGl0ZW0pKVxuICB9XG5cbiAgYWRkSXRlbShlbGVtZW50KSB7XG4gICAgdGhpcy5fY29udGFpbmVyLnByZXBlbmQoZWxlbWVudCk7XG4gIH1cbn0iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cCB7XG4gIGNvbnN0cnVjdG9yKHBvcHVwKSB7XG4gICAgdGhpcy5fcG9wdXAgPSBwb3B1cDtcbiAgICB0aGlzLl9oYW5kbGVFc2NDbG9zZSA9IHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcylcbiAgfVxuXG4gIG9wZW4oKSB7XG4gICAgdGhpcy5fcG9wdXAuY2xhc3NMaXN0LmFkZCgncG9wdXBfb3BlbmVkJyk7XG4gICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlKTtcbiAgfVxuXG4gIGNsb3NlKCkge1xuICAgIHRoaXMuX3BvcHVwLmNsYXNzTGlzdC5yZW1vdmUoJ3BvcHVwX29wZW5lZCcpO1xuICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCB0aGlzLl9oYW5kbGVFc2NDbG9zZSk7XG4gIH1cblxuICBfaGFuZGxlRXNjQ2xvc2UoZXZ0KSB7XG4gICAgaWYgKGV2dC5rZXkgPT09ICdFc2NhcGUnKSB7XG4gICAgICB0aGlzLmNsb3NlKCk7XG4gICAgfVxuICB9XG5cbiAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgdGhpcy5fcG9wdXAuYWRkRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgKGV2dCkgPT4ge1xuICAgICAgaWYgKGV2dC50YXJnZXQgPT09IGV2dC5jdXJyZW50VGFyZ2V0IHx8IGV2dC50YXJnZXQuY2xhc3NMaXN0LmNvbnRhaW5zKCdwb3B1cF9fY2xvc2UtYnV0dG9uJykpIHtcbiAgICAgICAgdGhpcy5jbG9zZSgpO1xuICAgICAgfVxuICAgIH0pXG4gIH1cbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vUG9wdXAuanNcIjtcblxuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhJbWFnZSBleHRlbmRzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXApIHtcbiAgICBzdXBlcihwb3B1cCk7XG4gICAgdGhpcy5fZGVzY3JpcHRpb24gPSB0aGlzLl9wb3B1cC5xdWVyeVNlbGVjdG9yKCcucG9wdXBfX3BpY3R1cmUtdGl0bGUnKTtcbiAgICB0aGlzLl9pbWFnZSA9IHRoaXMuX3BvcHVwLnF1ZXJ5U2VsZWN0b3IoJy5wb3B1cF9fcGljdHVyZScpO1xuICB9XG5cbiAgb3BlbiggbmFtZSwgbGluayApIHtcbiAgICB0aGlzLl9pbWFnZS5zcmMgPSBsaW5rO1xuICAgIHRoaXMuX2ltYWdlLmFsdCA9IG5hbWU7XG4gICAgdGhpcy5fZGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSBuYW1lO1xuICAgIHN1cGVyLm9wZW4oKTtcbiAgfVxufSIsImltcG9ydCBQb3B1cCBmcm9tIFwiLi9Qb3B1cC5qc1wiO1xuXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb3B1cFdpdGhGb3JtIGV4dGVuZHMgUG9wdXAge1xuICBjb25zdHJ1Y3Rvcihwb3B1cFNlbGVjdG9yLCB7aGFuZGxlRm9ybVN1Ym1pdCB9KSB7XG4gICAgc3VwZXIocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlRm9ybVN1Ym1pdCA9IGhhbmRsZUZvcm1TdWJtaXQ7XG4gICAgdGhpcy5fcG9wdXBGb3JtID0gdGhpcy5fcG9wdXAucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fZm9ybVwiKTtcbiAgICB0aGlzLl9pbnB1dExpc3QgPSB0aGlzLl9wb3B1cEZvcm0ucXVlcnlTZWxlY3RvckFsbChcIi5wb3B1cF9faW5wdXRcIik7XG4gIH1cblxuICBfZ2V0SW5wdXRWYWx1ZXMoKSB7XG4gICAgdGhpcy5fZm9ybVZhbHVlcyA9IHt9O1xuICAgIHRoaXMuX2lucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgdGhpcy5fZm9ybVZhbHVlc1tpbnB1dC5uYW1lXSA9IGlucHV0LnZhbHVlO1xuICAgIH0pO1xuXG4gICAgcmV0dXJuIHRoaXMuX2Zvcm1WYWx1ZXM7XG4gIH1cblxuICBzZXRFdmVudExpc3RlbmVycygpIHtcbiAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpO1xuICAgIHRoaXMuX3BvcHVwRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChldmVudCkgPT4ge1xuICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgIHRoaXMuX2hhbmRsZUZvcm1TdWJtaXQodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSk7XG4gICAgfSk7XG4gIH1cblxuICBjbG9zZSgpIHtcbiAgICBzdXBlci5jbG9zZSgpO1xuICAgIHRoaXMuX3BvcHVwRm9ybS5yZXNldCgpO1xuICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVXNlckluZm8ge1xuICBjb25zdHJ1Y3Rvcih7IHVzZXJuYW1lLCBkZXNjcmlwdGlvbiB9KSB7XG4gICAgdGhpcy5fdXNlcm5hbWUgPSB1c2VybmFtZTtcbiAgICB0aGlzLl9kZXNjcmlwdGlvbiA9IGRlc2NyaXB0aW9uO1xuICB9XG5cbiAgZ2V0VXNlckluZm8oKSB7XG4gICAgY29uc3QgdXNlckluZm8gPSB7XG4gICAgICB1c2VybmFtZTogdGhpcy5fdXNlcm5hbWUudGV4dENvbnRlbnQsXG4gICAgICBkZXNjcmlwdGlvbjogdGhpcy5fZGVzY3JpcHRpb24udGV4dENvbnRlbnRcbiAgICB9XG5cbiAgICByZXR1cm4gdXNlckluZm87XG4gIH1cblxuICBzZXRVc2VySW5mbyh1c2VyZGF0YSkge1xuICAgIHRoaXMuX3VzZXJuYW1lLnRleHRDb250ZW50ID0gdXNlcmRhdGEubmFtZTtcbiAgICB0aGlzLl9kZXNjcmlwdGlvbi50ZXh0Q29udGVudCA9IHVzZXJkYXRhLmRlc2NyaXB0aW9uO1xuICB9XG59IiwiaW1wb3J0ICcuL2luZGV4LmNzcydcblxuaW1wb3J0IE1lc3RvbG9nbyBmcm9tICcuLi9pbWFnZXMvTWVzdG9fX2xvZ28uc3ZnJ1xuXG5pbXBvcnQgQXZhdGFyIGZyb20gJy4uL2ltYWdlcy9QaG90by1jb250ZW50L0F2YXRhci5qcGcnXG5cbmltcG9ydCB7XG4gIGNvbmZpZ0Zvcm0sXG4gIGNvbmZpZ0NhcmQsXG4gIGluaXRpYWxDYXJkcyxcbiAgY2FyZHNDb250YWluZXIsXG4gIGJ1dHRvbkFkZENhcmRJdGVtLFxuICBwb3B1cEFkZENhcmQsXG4gIGZvcm1BZGRDYXJkLFxuICB0aXRsZUlucHV0LFxuICBsaW5rSW5wdXQsXG4gIGJ1dHRvbkVkaXRQcm9maWxlLFxuICBwb3B1cEVkaXRQcm9maWxlLFxuICBmb3JtRWRpdFByb2ZpbGUsXG4gIHByb2ZpbGVOYW1lLFxuICBwcm9maWxlRGVzY3JpcHRpb24sXG4gIG5hbWVJbnB1dCxcbiAgZGVzY3JpcHRpb25JbnB1dCxcbiAgcG9wdXBJbWFnZSxcbn0gZnJvbSAnLi4vdXRpbHMvY29uc3RhbnRzLmpzJztcblxuaW1wb3J0IEZvcm1WYWxpZGF0b3IgZnJvbSAnLi4vY29tcG9uZW50cy9Gb3JtVmFsaWRhdG9yLmpzJztcblxuaW1wb3J0IENhcmQgZnJvbSAnLi4vY29tcG9uZW50cy9DYXJkLmpzJztcblxuaW1wb3J0IFNlY3Rpb24gZnJvbSAnLi4vY29tcG9uZW50cy9TZWN0aW9uLmpzJztcblxuaW1wb3J0IFBvcHVwV2l0aEltYWdlIGZyb20gJy4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanMnO1xuXG5pbXBvcnQgUG9wdXBXaXRoRm9ybSBmcm9tICcuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0uanMnO1xuXG5pbXBvcnQgVXNlckluZm8gZnJvbSAnLi4vY29tcG9uZW50cy9Vc2VySW5mby5qcyc7XG5cblxuY29uc3QgZm9ybUVkaXRQcm9maWxlVmFsaWRhdG9yID0gbmV3IEZvcm1WYWxpZGF0b3IoY29uZmlnRm9ybSwgZm9ybUVkaXRQcm9maWxlKTtcbmZvcm1FZGl0UHJvZmlsZVZhbGlkYXRvci5lbmFibGVWYWxpZGF0aW9uKCk7XG5jb25zdCBmb3JtQWRkQ2FyZFZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKGNvbmZpZ0Zvcm0sIGZvcm1BZGRDYXJkKTtcbmZvcm1BZGRDYXJkVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbmNvbnN0IHZpZXdJbWFnZVBvcHVwID0gbmV3IFBvcHVwV2l0aEltYWdlKHBvcHVwSW1hZ2UpO1xudmlld0ltYWdlUG9wdXAuc2V0RXZlbnRMaXN0ZW5lcnMoKTtcblxuLy/RgdC+0LfQtNCw0L3QuNC1INC90L7QstC+0Lkg0LrQsNGA0YLQvtGH0LrQuFxuZnVuY3Rpb24gY3JlYXRlQ2FyZChuYW1lLCBsaW5rKSB7XG4gIGNvbnN0IGNhcmQgPSBuZXcgQ2FyZChjb25maWdDYXJkLCBuYW1lLCBsaW5rLCB7XG4gICAgaGFuZGxlckNsaWNrSW1hZ2U6ICgpID0+IHtcbiAgICAgIHZpZXdJbWFnZVBvcHVwLm9wZW4obmFtZSwgbGluaylcbiAgICB9XG4gIH0pO1xuXG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gY2FyZC5nZXRDYXJkRWxlbWVudCgpXG4gIHJldHVybiBjYXJkRWxlbWVudDtcbn1cblxuXG4vLyDQvtGC0YDQuNGB0L7QstC60LAg0LrQsNGA0YLQvtGH0LXQuiDQuNC3INC80LDRgdGB0LjQstCwXG5jb25zdCBjYXJkc0xpc3QgPSBuZXcgU2VjdGlvbih7XG4gICAgaXRlbXM6IGluaXRpYWxDYXJkcyxcbiAgICByZW5kZXJlcjogKGl0ZW0pID0+IHtcbiAgICAgIGNhcmRzTGlzdC5hZGRJdGVtKGNyZWF0ZUNhcmQoaXRlbS5uYW1lLCBpdGVtLmxpbmspKTtcbiAgICB9LFxuICB9LFxuICBjYXJkc0NvbnRhaW5lclxuKTtcblxuLy8g0LfQsNCz0YDRg9C30LrQsCDQutCw0YDRgtC+0YfQtdC6INC90LAg0YHRgtGA0LDQvdC40YbRg1xuY2FyZHNMaXN0LnJlbmRlckl0ZW1zKCk7XG5cblxuLy8g0YTQvtGA0LzQsCDQtNC+0LHQsNCy0LvQtdC90LjRjyDQutCw0YDRgtC+0YfQutC4XG5jb25zdCBhZGRDYXJkRm9ybSA9IG5ldyBQb3B1cFdpdGhGb3JtKFxuICBwb3B1cEFkZENhcmQsIHtcbiAgICBoYW5kbGVGb3JtU3VibWl0OiAoKSA9PiB7XG4gICAgICBjYXJkc0xpc3QuYWRkSXRlbShjcmVhdGVDYXJkKHRpdGxlSW5wdXQudmFsdWUsIGxpbmtJbnB1dC52YWx1ZSkpO1xuICAgICAgYWRkQ2FyZEZvcm0uY2xvc2UoKTtcbiAgICAgIGZvcm1BZGRDYXJkVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpO1xuICAgIH0sXG4gIH0pO1xuLy8g0YHQu9GD0YjQsNGC0LXQu9C4INC00LvRjyDRhNC+0YDQvNGLINC00L7QsdCw0LLQu9C10L3QuNGPINC60LDRgNGC0L7Rh9C60LhcbmFkZENhcmRGb3JtLnNldEV2ZW50TGlzdGVuZXJzKCk7XG5cbmJ1dHRvbkFkZENhcmRJdGVtLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIGFkZENhcmRGb3JtLm9wZW4oKTtcbiAgZm9ybUFkZENhcmRWYWxpZGF0b3IucmVzZXRWYWxpZGF0aW9uKCk7XG59KTtcblxuY29uc3QgdXNlckluZm8gPSBuZXcgVXNlckluZm8oe1xuICB1c2VybmFtZTogcHJvZmlsZU5hbWUsXG4gIGRlc2NyaXB0aW9uOiBwcm9maWxlRGVzY3JpcHRpb24sXG59KTtcblxuLy8g0YHQvtC30LTQsNC90LjQtSDQv9C+0L/QsNC/0LAg0YEg0YTQvtGA0LzQvtC5INGA0LXQtNCw0LrRgtC40YDQvtCy0LDQvdC40Y8g0L/RgNC+0YTQuNC70Y9cbmZ1bmN0aW9uIGZpbGxFZGl0UHJvZmlsZUZvcm0oe1xuICB1c2VybmFtZSxcbiAgZGVzY3JpcHRpb25cbn0pIHtcbiAgbmFtZUlucHV0LnZhbHVlID0gdXNlcm5hbWU7XG4gIGRlc2NyaXB0aW9uSW5wdXQudmFsdWUgPSBkZXNjcmlwdGlvbjtcbn1cblxuY29uc3QgZWRpdFByb2ZpbGVQb3B1cCA9IG5ldyBQb3B1cFdpdGhGb3JtKFxuICBwb3B1cEVkaXRQcm9maWxlLCB7XG4gICAgaGFuZGxlRm9ybVN1Ym1pdDogKGRhdGFGb3JtKSA9PiB7XG4gICAgICB1c2VySW5mby5zZXRVc2VySW5mbyhkYXRhRm9ybSk7XG4gICAgICBlZGl0UHJvZmlsZVBvcHVwLmNsb3NlKCk7XG4gICAgfSxcbiAgfSk7XG5lZGl0UHJvZmlsZVBvcHVwLnNldEV2ZW50TGlzdGVuZXJzKCk7XG4vLyDQntCx0YDQsNCx0L7RgtGH0LjQuiDQutC90L7Qv9C60LggRWRpdCDQv9C+0L/QsNC/0LAg0YDQtdC00LDQutGC0LjRgNC+0LLQsNC90LjRjyDQv9GA0L7RhNC40LvRj1xuYnV0dG9uRWRpdFByb2ZpbGUuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgY29uc3QgaW5mbyA9IHVzZXJJbmZvLmdldFVzZXJJbmZvKCk7XG4gIGZpbGxFZGl0UHJvZmlsZUZvcm0oe1xuICAgIHVzZXJuYW1lOiBpbmZvLnVzZXJuYW1lLFxuICAgIGRlc2NyaXB0aW9uOiBpbmZvLmRlc2NyaXB0aW9uLFxuICB9KTtcbiAgZWRpdFByb2ZpbGVQb3B1cC5vcGVuKCk7XG4gIGZvcm1FZGl0UHJvZmlsZVZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKTtcbn0pOyJdLCJuYW1lcyI6WyJfX3dlYnBhY2tfcmVxdWlyZV9fIiwiZXhwb3J0cyIsImRlZmluaXRpb24iLCJrZXkiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiZyIsImdsb2JhbFRoaXMiLCJ0aGlzIiwiRnVuY3Rpb24iLCJlIiwid2luZG93Iiwib2JqIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInIiLCJTeW1ib2wiLCJ0b1N0cmluZ1RhZyIsInZhbHVlIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiZG9jdW1lbnQiLCJjdXJyZW50U2NyaXB0Iiwic3JjIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwibGVuZ3RoIiwiRXJyb3IiLCJyZXBsYWNlIiwicCIsImNvbmZpZ0Zvcm0iLCJmb3JtU2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsImNvbmZpZ0NhcmQiLCJ0ZW1wbGF0ZVNlbGVjdG9yIiwiY2FyZFNlbGVjdG9yIiwiYnV0dG9uTGlrZVNlbGVjdG9yIiwiYnV0dG9uRGVsZXRlU2VsZWN0b3IiLCJpbWFnZVNlbGVjdG9yIiwidGl0bGVTZWxlY3RvciIsImxpa2VDbGFzcyIsImNhcmRzQ29udGFpbmVyIiwicXVlcnlTZWxlY3RvciIsImJ1dHRvbkFkZENhcmRJdGVtIiwicG9wdXBBZGRDYXJkIiwiZm9ybUFkZENhcmQiLCJ0aXRsZUlucHV0IiwibGlua0lucHV0IiwiYnV0dG9uRWRpdFByb2ZpbGUiLCJwb3B1cEVkaXRQcm9maWxlIiwiZm9ybUVkaXRQcm9maWxlIiwicHJvZmlsZU5hbWUiLCJwcm9maWxlRGVzY3JpcHRpb24iLCJuYW1lSW5wdXQiLCJkZXNjcmlwdGlvbklucHV0IiwicG9wdXBJbWFnZSIsIkZvcm1WYWxpZGF0b3IiLCJjb25maWciLCJmb3JtIiwiX2NvbmZpZyIsIl9mb3JtIiwiX2lucHV0TGlzdCIsIkFycmF5IiwiZnJvbSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJfYnV0dG9uRWxlbWVudCIsImlucHV0RWxlbWVudCIsImVycm9yRWxlbWVudCIsImlkIiwiY2xhc3NMaXN0IiwiYWRkIiwidGV4dENvbnRlbnQiLCJ2YWxpZGF0aW9uTWVzc2FnZSIsInJlbW92ZSIsInZhbGlkaXR5IiwidmFsaWQiLCJfaGlkZUVycm9yIiwiX3Nob3dFcnJvciIsInNvbWUiLCJzZXRBdHRyaWJ1dGUiLCJyZW1vdmVBdHRyaWJ1dGUiLCJfaGFzSW52YWxpZElucHV0IiwiZGlzYWJsZWRCdXR0b24iLCJlbmFibGVCdXR0b24iLCJmb3JFYWNoIiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9pc1ZhbGlkIiwidG9nZ2xlQnV0dG9uU3RhdGUiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJDYXJkIiwibmFtZSIsImxpbmsiLCJoYW5kbGVyQ2xpY2tJbWFnZSIsIl9oYW5kbGVyQ2xpY2tJbWFnZSIsIl9uYW1lIiwiX2xpbmsiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwiX2NhcmRFbGVtZW50IiwiX2dldFRlbXBsYXRlIiwiX2ltYWdlIiwiYWx0IiwidG9nZ2xlIiwiX2hhbmRsZUxpa2VDYXJkIiwiX2hhbmRsZURlbGV0ZUNhcmQiLCJTZWN0aW9uIiwiY29udGFpbmVyIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9yZW5kZXJlZEl0ZW1zIiwiX3JlbmRlcmVyIiwiX2NvbnRhaW5lciIsIml0ZW0iLCJlbGVtZW50IiwicHJlcGVuZCIsIlBvcHVwIiwicG9wdXAiLCJfcG9wdXAiLCJfaGFuZGxlRXNjQ2xvc2UiLCJiaW5kIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImV2dCIsImNsb3NlIiwidGFyZ2V0IiwiY3VycmVudFRhcmdldCIsImNvbnRhaW5zIiwiUG9wdXBXaXRoSW1hZ2UiLCJfZGVzY3JpcHRpb24iLCJQb3B1cFdpdGhGb3JtIiwicG9wdXBTZWxlY3RvciIsImhhbmRsZUZvcm1TdWJtaXQiLCJfaGFuZGxlRm9ybVN1Ym1pdCIsIl9wb3B1cEZvcm0iLCJfZm9ybVZhbHVlcyIsImlucHV0IiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsIl9nZXRJbnB1dFZhbHVlcyIsInJlc2V0IiwiVXNlckluZm8iLCJ1c2VybmFtZSIsImRlc2NyaXB0aW9uIiwiX3VzZXJuYW1lIiwidXNlcmRhdGEiLCJmb3JtRWRpdFByb2ZpbGVWYWxpZGF0b3IiLCJlbmFibGVWYWxpZGF0aW9uIiwiZm9ybUFkZENhcmRWYWxpZGF0b3IiLCJ2aWV3SW1hZ2VQb3B1cCIsImNyZWF0ZUNhcmQiLCJvcGVuIiwiZ2V0Q2FyZEVsZW1lbnQiLCJzZXRFdmVudExpc3RlbmVycyIsImNhcmRzTGlzdCIsImluaXRpYWxDYXJkcyIsImFkZEl0ZW0iLCJyZW5kZXJJdGVtcyIsImFkZENhcmRGb3JtIiwicmVzZXRWYWxpZGF0aW9uIiwidXNlckluZm8iLCJlZGl0UHJvZmlsZVBvcHVwIiwiZGF0YUZvcm0iLCJzZXRVc2VySW5mbyIsImluZm8iLCJnZXRVc2VySW5mbyJdLCJzb3VyY2VSb290IjoiIn0=